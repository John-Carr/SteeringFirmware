cmath:260:3:constexpr float std::floor(float)	16	static
cmath:584:3:constexpr bool std::isinf(float)	24	static
cmath:611:3:constexpr bool std::isnan(float)	24	static
cmath:1756:3:constexpr float std::round(float)	16	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
memory.h:1865:15:void etl::memory_clear(volatile char*, size_t)	16	static
basic_string.h:239:10:bool etl::string_base::is_truncated() const	16	static
flags.h:120:37:constexpr etl::flags<T, MASK>& etl::flags<T, MASK>::set() [with T pattern = 2; T = unsigned char; T MASK = 255]	16	static
basic_string.h:257:10:void etl::string_base::set_secure()	16	static
basic_string.h:265:10:bool etl::string_base::is_secure() const	16	static
basic_string.h:276:5:etl::string_base::string_base(etl::string_base::size_type)	16	static
flags.h:111:37:constexpr etl::flags<T, MASK>& etl::flags<T, MASK>::set(bool) [with T pattern = 1; T = unsigned char; T MASK = 255]	16	static
basic_string.h:286:10:void etl::string_base::set_truncated(bool)	16	static
basic_string.h:295:5:etl::string_base::~string_base()	16	static
algorithm.h:1125:12:constexpr const T& etl::min(const T&, const T&) [with T = unsigned int]	24	static
functional.h:132:24:constexpr bool etl::less<T>::operator()(const T&, const T&) const [with T = unsigned int]	24	static
algorithm.h:1117:12:constexpr const T& etl::min(const T&, const T&, TCompare) [with T = unsigned int; TCompare = etl::less<unsigned int>]	24	static
string.h:54:9:etl::string<5>::~string()	16	static
UI.cpp:13:6:void SolarGators::Drivers::InfoSquare::Draw(SolarGators::Drivers::ILI9341&)	56	static
UI.cpp:24:6:void SolarGators::Drivers::InfoSquare::UpdateValue(SolarGators::Drivers::ILI9341&, etl::string<5>&)	40	static
UI.hpp:28:7:SolarGators::Drivers::InfoSquare::InfoSquare()	16	static
UI.hpp:28:7:SolarGators::Drivers::InfoSquare::~InfoSquare()	16	static
array.h:87:9:etl::array<SolarGators::Drivers::InfoSquare, 4>::array()	24	static
array.h:87:9:etl::array<SolarGators::Drivers::InfoSquare, 4>::~array()	24	static
UI.cpp:30:1:SolarGators::Drivers::UI::UI(SolarGators::Drivers::ILI9341&)	128	static
UI.cpp:49:1:SolarGators::Drivers::UI::~UI()	16	static
UI.cpp:54:6:void SolarGators::Drivers::UI::UpdateSquare(uint8_t, etl::string<5>&)	24	static
UI.cpp:62:6:void SolarGators::Drivers::UI::DrawSpeed()	32	static
string.h:54:9:etl::string<4>::~string()	16	static
UI.cpp:72:6:void SolarGators::Drivers::UI::UpdateSpeed(float)	64	static
UI.cpp:81:6:void SolarGators::Drivers::UI::DrawTripCodes()	192	static
flags.h:87:24:constexpr bool etl::flags<T, MASK>::test() const [with T pattern = 1; T = unsigned char; T MASK = 255]	16	static
flags.h:87:24:constexpr bool etl::flags<T, MASK>::test() const [with T pattern = 2; T = unsigned char; T MASK = 255]	16	static
flags.h:68:19:constexpr etl::flags<T, MASK>::flags() [with T = unsigned char; T MASK = 255]	16	static
basic_string.h:2271:5:etl::ibasic_string<T>::ibasic_string(T*, etl::string_base::size_type) [with T = char]	24	static
basic_string.h:2372:5:etl::ibasic_string<T>::~ibasic_string() [with T = char]	16	static
basic_string.h:2280:10:void etl::ibasic_string<T>::initialise() [with T = char]	16	static
basic_string.h:617:10:void etl::ibasic_string<T>::assign(const etl::ibasic_string<T>&) [with T = char]	24	static
basic_string.h:738:10:void etl::ibasic_string<T>::assign(TIterator, TIterator) [with TIterator = const char*; T = char]	40	static
basic_string.h:1317:19:const T* etl::ibasic_string<T>::c_str() const [with T = char]	16	static
string.h:112:35:etl::string<MAX_SIZE_>::string(const value_type*) [with unsigned int MAX_SIZE_ = 5]	24	static
string.h:68:5:etl::string<MAX_SIZE_>::string() [with unsigned int MAX_SIZE_ = 5]	16	static
array.h:321:26:constexpr size_t etl::array<T, SIZE_>::size() const [with T = SolarGators::Drivers::InfoSquare; unsigned int SIZE_ = 4]	16	static
array.h:143:15:T& etl::array<T, SIZE_>::operator[](size_t) [with T = SolarGators::Drivers::InfoSquare; unsigned int SIZE_ = 4]	16	static
string.h:199:13:etl::string<MAX_SIZE_>& etl::string<MAX_SIZE_>::operator=(const etl::string<MAX_SIZE_>&) [with unsigned int MAX_SIZE_ = 5]	16	static
string.h:68:5:etl::string<MAX_SIZE_>::string() [with unsigned int MAX_SIZE_ = 4]	16	static
basic_format_spec.h:209:19:constexpr etl::basic_format_spec<TString>::basic_format_spec() [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:356:40:constexpr etl::basic_format_spec<TString>& etl::basic_format_spec<TString>::precision(uint32_t) [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:338:40:constexpr etl::basic_format_spec<TString>& etl::basic_format_spec<TString>::width(uint32_t) [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:392:40:constexpr etl::basic_format_spec<TString>& etl::basic_format_spec<TString>::fill(typename TString::value_type) [with TString = etl::ibasic_string<char>]	16	static
to_string.h:63:5:typename etl::enable_if<((! etl::is_same<T, etl::ibasic_string<char> >::value) && (! etl::is_same<T, etl::basic_string_view<char> >::value)), const etl::ibasic_string<char>&>::type etl::to_string(T, etl::istring&, const format_spec&, bool) [with T = float]	24	static
basic_string.h:2343:10:void etl::ibasic_string<T>::cleanup() [with T = char]	16	static
basic_string.h:347:20:const T* etl::ibasic_string<T>::begin() const [with T = char]	16	static
basic_string.h:365:20:const T* etl::ibasic_string<T>::end() const [with T = char]	16	static
char_traits.h:117:35:static constexpr size_t etl::char_traits<T>::length(const char_type*) [with T = char]	24	static
iterator.h:219:77:typename std::iterator_traits<_Iterator>::difference_type etl::distance(TIterator, TIterator) [with TIterator = const char*]	16	static
algorithm.h:748:8:void etl::fill(TIterator, TIterator, const TValue&) [with TIterator = char*; TValue = char]	24	static
to_string_helper.h:618:7:typename etl::enable_if<etl::is_floating_point<T>::value, const TIString&>::type etl::private_to_string::to_string(T, TIString&, const etl::basic_format_spec<TIString>&, bool) [with T = float; TIString = etl::ibasic_string<char>]	24	static
memory.h:1906:8:void etl::memory_clear_range(volatile T*, volatile T*) [with T = char]	24	static
basic_string.h:338:14:T* etl::ibasic_string<T>::begin() [with T = char]	16	static
stl_iterator_base_funcs.h:138:5:typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*]	32	static
stl_algobase.h:742:5:void std::fill(_ForwardIterator, _ForwardIterator, const _Tp&) [with _ForwardIterator = char*; _Tp = char]	32	static
basic_format_spec.h:365:28:constexpr uint32_t etl::basic_format_spec<TString>::get_precision() const [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:428:40:constexpr etl::basic_format_spec<TString>& etl::basic_format_spec<TString>::right() [with TString = etl::ibasic_string<char>]	16	static
absolute.h:43:5:constexpr typename etl::enable_if<etl::is_signed<T>::value, T>::type etl::absolute(T) [with T = float]	16	static
to_string_helper.h:295:10:void etl::private_to_string::add_floating_point(T, TIString&, const etl::basic_format_spec<TIString>&, bool) [with T = float; TIString = etl::ibasic_string<char>]	120	static
iterator.h:219:77:typename std::iterator_traits<_Iterator>::difference_type etl::distance(TIterator, TIterator) [with TIterator = volatile char*]	16	static
memory.h:1893:8:void etl::memory_clear_range(volatile T*, size_t) [with T = char]	16	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*]	24	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = char*]	16	static
stl_algobase.h:721:5:typename __gnu_cxx::__enable_if<std::__is_byte<_Tp>::__value, void>::__type std::__fill_a(_Tp*, _Tp*, const _Tp&) [with _Tp = char]	32	static
basic_string.h:791:10:void etl::ibasic_string<T>::clear() [with T = char]	16	static
basic_string.h:356:14:T* etl::ibasic_string<T>::end() [with T = char]	16	static
to_string_helper.h:226:10:void etl::private_to_string::add_nan_inf(bool, bool, TIString&) [with TIString = etl::ibasic_string<char>]	24	static
basic_format_spec.h:262:40:constexpr etl::basic_format_spec<TString>& etl::basic_format_spec<TString>::base(uint32_t) [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:292:40:constexpr etl::basic_format_spec<TString>& etl::basic_format_spec<TString>::decimal() [with TString = etl::ibasic_string<char>]	16	static
negative.h:44:5:constexpr typename etl::enable_if<etl::is_signed<T>::value, bool>::type etl::is_negative(T) [with T = float]	24	static
to_string_helper.h:272:10:void etl::private_to_string::add_integral_and_fractional(uint64_t, uint64_t, TIString&, const etl::basic_format_spec<TIString>&, const etl::basic_format_spec<TIString>&, bool) [with TIString = etl::ibasic_string<char>]	40	static
basic_format_spec.h:347:28:constexpr uint32_t etl::basic_format_spec<TString>::get_width() const [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:419:24:constexpr bool etl::basic_format_spec<TString>::is_left() const [with TString = etl::ibasic_string<char>]	16	static
to_string_helper.h:69:10:void etl::private_to_string::add_alignment(TIString&, typename TIString::iterator, const etl::basic_format_spec<TIString>&) [with TIString = etl::ibasic_string<char>]	40	static
stl_iterator_base_funcs.h:138:5:typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = volatile char*]	32	static
range_access.h:87:5:constexpr _Tp* std::begin(_Tp (&)[_Nm]) [with _Tp = const char; unsigned int _Nm = 3]	16	static
range_access.h:97:5:constexpr _Tp* std::end(_Tp (&)[_Nm]) [with _Tp = const char; unsigned int _Nm = 3]	16	static
basic_string.h:1057:14:T* etl::ibasic_string<T>::insert(etl::ibasic_string<T>::const_iterator, TIterator, TIterator) [with TIterator = const char*; T = char]	64	static
basic_format_spec.h:311:28:constexpr uint32_t etl::basic_format_spec<TString>::get_base() const [with TString = etl::ibasic_string<char>]	16	static
absolute.h:53:5:constexpr typename etl::enable_if<etl::is_unsigned<T>::value, T>::type etl::absolute(T) [with T = long long unsigned int]	16	static
basic_format_spec.h:383:24:constexpr bool etl::basic_format_spec<TString>::is_upper_case() const [with TString = etl::ibasic_string<char>]	16	static
basic_format_spec.h:329:24:constexpr bool etl::basic_format_spec<TString>::is_show_base() const [with TString = etl::ibasic_string<char>]	16	static
to_string_helper.h:142:10:void etl::private_to_string::add_integral(T, TIString&, const etl::basic_format_spec<TIString>&, bool, bool) [with T = long long unsigned int; TIString = etl::ibasic_string<char>]	56	static
basic_string.h:801:10:void etl::ibasic_string<T>::push_back(T) [with T = char]	16	static
iterator.h:219:77:typename std::iterator_traits<_Iterator>::difference_type etl::distance(TIterator, TIterator) [with TIterator = char*]	16	static
basic_format_spec.h:401:48:constexpr typename TString::value_type etl::basic_format_spec<TString>::get_fill() const [with TString = etl::ibasic_string<char>]	16	static
basic_string.h:970:14:T* etl::ibasic_string<T>::insert(etl::ibasic_string<T>::const_iterator, etl::string_base::size_type, T) [with T = char]	64	static
stl_iterator_base_funcs.h:138:5:typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*]	32	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = volatile char*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = volatile char*]	24	static
basic_string.h:2387:14:T* etl::ibasic_string<T>::to_iterator(etl::ibasic_string<T>::const_iterator) const [with T = char]	16	static
algorithm.h:316:14:TIterator2 etl::copy_backward(TIterator1, TIterator1, TIterator2) [with TIterator1 = char*; TIterator2 = char*]	24	static
algorithm.h:569:5:constexpr typename etl::enable_if<etl::is_pointer<T>::value, void>::type etl::reverse(TIterator, TIterator) [with TIterator = char*]	16	static
basic_string.h:374:20:const T* etl::ibasic_string<T>::cbegin() const [with T = char]	16	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = char*]	16	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*]	24	static
stl_algobase.h:641:5:_BI2 std::copy_backward(_BI1, _BI1, _BI2) [with _BI1 = char*; _BI2 = char*]	32	static
algorithm.h:83:8:constexpr void etl::iter_swap(TIterator1, TIterator2) [with TIterator1 = char*; TIterator2 = char*]	16	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = char*]	16	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = char*]	16	static
stl_algobase.h:613:5:_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = false; _BI1 = char*; _BI2 = char*]	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = char&]	16	static
move.h:182:5:typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp> >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = char]	32	static
stl_algobase.h:595:5:_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = false; _BI1 = char*; _BI2 = char*]	32	static
stl_algobase.h:577:2:static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = char; bool _IsMove = false]	32	static
